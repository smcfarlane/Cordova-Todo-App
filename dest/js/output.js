(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var Header = require('./components/header.jsx');
var Todos = require('./components/todos.jsx');
var NewTodo = require('./components/new_todo.jsx');
var Router = window.ReactRouter;
var Route = Router.Route;
var DefaultRoute = Router.DefaultRoute;
var RouteHandler = Router.RouteHandler;
var Link = Router.Link;

var TransitionGroup = React.addons.CSSTransitionGroup;

var App = React.createClass({
  displayName: 'App',

  contextTypes: {
    router: React.PropTypes.func.isRequired
  },
  render: function render() {
    var name = this.context.router.getCurrentPath();
    return React.createElement(
      'div',
      null,
      React.createElement(Header, null),
      React.createElement(
        TransitionGroup,
        { className: 'flex-100', component: 'div', transitionName: 'view' },
        React.createElement(RouteHandler, { key: name })
      )
    );
  }
});

var routes = React.createElement(
  Route,
  { handler: App },
  React.createElement(Route, { name: 'index', path: '/', handler: Todos }),
  React.createElement(Route, { name: 'newtodo', path: '/newtodo', handler: NewTodo })
);

Router.run(routes, Router.HashLocation, function (Root) {
  React.render(React.createElement(Root, null), document.getElementById('app'));
});

document.addEventListener('deviceready', function () {
  if (navigator.notification) {
    // Override default HTML alert with native dialog
    window.alert = function (message) {
      navigator.notification.alert(message, // message
      null, // callback
      'Todos', // title
      'OK' // buttonName
      );
    };
  }
}, false);

},{"./components/header.jsx":3,"./components/new_todo.jsx":4,"./components/todos.jsx":5}],2:[function(require,module,exports){
'use strict';

var Todos = require('./../stores/todo_store.jsx');

var actions = {};

actions.addTodo = function (e) {
  e.preventDefault();
  var input = e.target.getElementsByTagName('input')[0];
  var newTodo = input.value;
  input.value = '';
  Todos.addTodoToStore(newTodo);
  location.assign(location.pathname + '#/');
  console.log('action \'addTodo\' fired');
};

actions.deleteTodo = function (e) {
  console.log(e);
  var parent = e.target.parentElement;
  console.log(parent);
  var swipe = parent.getElementsByClassName('swipe-left-100')[0];
  swipe.className = swipe.className.replace(' swipe-left-100', '');
  Todos.deleteTodoOnStorage(e.target.getAttribute('data-todo-id'));
  console.log('action \'deleteTodo\' fired');
};

module.exports = actions;

},{"./../stores/todo_store.jsx":8}],3:[function(require,module,exports){
'use strict';

var Router = window.ReactRouter;
var Route = Router.Route;
var DefaultRoute = Router.DefaultRoute;
var RouteHandler = Router.RouteHandler;
var Link = Router.Link;

var Header = React.createClass({
  displayName: 'Header',

  render: function render() {
    var s1 = {
      paddingTop: '20px',
      height: '64px'
    };
    if (window.location.hash.substr(1) !== '/') {
      return React.createElement(
        'header',
        { className: 'bar bar-nav', style: s1 },
        React.createElement(
          Link,
          { className: 'btn btn-link btn-nav pull-left', to: '/' },
          React.createElement('span', { className: 'icon icon-left-nav' }),
          'Back'
        ),
        React.createElement(
          'button',
          { className: 'btn pull-right' },
          React.createElement(
            Link,
            { className: 'header-btn', to: 'newtodo' },
            'New Todo'
          )
        ),
        React.createElement(Title, { classes: 'title', text: 'Todo App' })
      );
    }
    return React.createElement(
      'div',
      null,
      React.createElement(
        'header',
        { className: 'bar bar-nav', style: s1 },
        React.createElement(
          'button',
          { className: 'btn pull-right' },
          React.createElement(
            Link,
            { className: 'header-btn', to: 'newtodo' },
            'New Todo'
          )
        ),
        React.createElement(Title, { classes: 'title', text: 'Todo App' })
      )
    );
  }
});

var Title = React.createClass({
  displayName: 'Title',

  render: function render() {
    return React.createElement(
      'h1',
      { className: this.props.classes },
      this.props.text
    );
  }
});

var HeaderBtn = React.createClass({
  displayName: 'HeaderBtn',

  render: function render() {
    return React.createElement(
      'button',
      { className: this.props.classes },
      React.createElement(
        Link,
        { to: 'newTodo' },
        this.props.text
      )
    );
  }
});

module.exports = Header;

},{}],4:[function(require,module,exports){
'use strict';

var actions = require('./../actions/todo_actions.jsx');

var NewTodo = React.createClass({
  displayName: 'NewTodo',

  render: function render() {
    return React.createElement(
      'div',
      { className: 'flex-100' },
      React.createElement(TodoForm, null)
    );
  }
});

var TodoForm = React.createClass({
  displayName: 'TodoForm',

  render: function render() {
    var s = { marginTop: '40px' };
    return React.createElement(
      'div',
      { className: 'flex-75 center top-40', style: s },
      React.createElement(
        'form',
        { onSubmit: actions.addTodo },
        React.createElement(
          'label',
          { className: 'center' },
          'New Todo'
        ),
        React.createElement('input', { type: 'text', placeholder: 'New Todo Here :)' }),
        React.createElement(
          'button',
          { className: 'btn btn-primary' },
          'Add Todo'
        )
      )
    );
  }
});

module.exports = NewTodo;

},{"./../actions/todo_actions.jsx":2}],5:[function(require,module,exports){
'use strict';

var actions = require('./../actions/todo_actions.jsx');
var todosStore = require('./../stores/todo_store.jsx');

var Todos = React.createClass({
  displayName: 'Todos',

  getInitialState: function getInitialState() {
    return { todos: [] };
  },
  componentDidMount: function componentDidMount() {
    document.addEventListener('todosStoreUpdate', this.todosStoreUpdated);
    todosStore.getTodosFromStorage();
  },
  todosStoreUpdated: function todosStoreUpdated() {
    this.setState({ todos: todosStore.data.todos });
    console.log('updated todos component state');
  },
  render: function render() {
    console.log(this.state.todos);
    return React.createElement(
      'div',
      { className: 'flex-100 view' },
      React.createElement(TodoList, { todos: this.state.todos })
    );
  }
});

var TodoList = React.createClass({
  displayName: 'TodoList',

  render: function render() {
    var todos = [];
    this.props.todos.forEach(function (todo, index) {
      todos.push(React.createElement(Todo, { key: index, todoId: index, todo: todo.text }));
    });
    return React.createElement(
      'ul',
      { className: 'table-view flex-100' },
      todos
    );
  }
});

var Todo = React.createClass({
  displayName: 'Todo',

  render: function render() {
    var todo = this.props.todo;
    return React.createElement(
      'li',
      { className: 'table-view-cell li-fix' },
      React.createElement(
        SwipeDiv,
        null,
        React.createElement('span', { className: 'icon icon-check' }),
        this.props.todo
      ),
      React.createElement(Delete, { todoId: this.props.todoId })
    );
  }
});

var Delete = React.createClass({
  displayName: 'Delete',

  componentDidMount: function componentDidMount() {
    var node = this.getDOMNode();
    this.hammer = new Hammer(node);
    this.hammer.on('tap', function (e) {
      actions.deleteTodo(e);
    });
  },
  render: function render() {
    return React.createElement(
      'div',
      { className: 'delete', 'data-todo-id': this.props.todoId },
      React.createElement(
        'p',
        null,
        'Delete'
      )
    );
  }
});

var SwipeDiv = React.createClass({
  displayName: 'SwipeDiv',

  componentDidMount: function componentDidMount() {
    var node = this.getDOMNode();
    this.hammer = new Hammer(node);
    this.hammer.on('panleft', function () {
      if (node.className.indexOf('-100') === -1) {
        if (node.className.indexOf('reset') !== -1) {
          node.className = node.className.replace(' swipe-left-reset', '');
        }
        node.className = node.className + ' swipe-left-100';
      }
    });
    this.hammer.on('panright', function () {
      if (node.className.indexOf('-100') !== -1) {
        node.className = node.className.replace(' swipe-left-100', '');
        if (node.className.indexOf('-reset') === -1) {
          node.className = node.className + ' swipe-left-reset';
        }
      }
    });
  },
  render: function render() {
    return React.createElement(
      'div',
      { className: 'swipe-left' },
      this.props.children
    );
  }
});

module.exports = Todos;

},{"./../actions/todo_actions.jsx":2,"./../stores/todo_store.jsx":8}],6:[function(require,module,exports){
"use strict";

var storeUpdateEvent = function storeUpdateEvent(name, details) {
  return new CustomEvent(name, {
    detail: details,
    bubbles: true,
    cancelable: true
  });
};

module.exports = storeUpdateEvent;

},{}],7:[function(require,module,exports){
'use strict';

var storeUpdateEvent = require('./event.jsx');

var store = {
  data: {},
  getAllData: function getAllData() {
    return this.data;
  },
  updated: function updated() {
    document.dispatchEvent(storeUpdateEvent);
  }
};

module.exports = store;

},{"./event.jsx":6}],8:[function(require,module,exports){
'use strict';

var store = require('./store.jsx');
var storeUpdateEvent = require('./event.jsx');

var todo = {
  done: false,
  text: ''
};

var Todos = Object.create(store);
Todos.data.todos = [];

Todos.event = storeUpdateEvent('todosStoreUpdate', {});

Todos.updated = function () {
  document.dispatchEvent(this.event);
  console.log('event fired');
};

Todos.addTodoToStore = function (text) {
  var t = Object.create(todo);
  t.text = text;
  t.done = false;
  console.log(this.data);
  this.data.todos.push(t);
  this.storeTodos();
  this.updated();
};

Todos.deleteTodoOnStorage = function (i) {
  this.data.todos.splice(i, 1);
  this.storeTodos();
  this.updated();
};

Todos.storeTodos = function () {
  localStorage.setItem('todosStorage', JSON.stringify(this.data));
};

Todos.getTodosFromStorage = function () {
  var storage = localStorage.getItem('todosStorage');
  if (storage !== null) {
    var data = JSON.parse(storage);
    this.data.todos = data.todos;
  }
  this.updated();
};

module.exports = Todos;

},{"./event.jsx":6,"./store.jsx":7}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
